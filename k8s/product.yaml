apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-deploy
  namespace: sit722
spec:
  replicas: 1
  selector:
    matchLabels: { app: product-svc }
  template:
    metadata:
      labels: { app: product-svc }
    spec:
      containers:
      - name: product-service
        image: sit722prodacr.azurecr.io/product-service:latest
        imagePullPolicy: IfNotPresent
        ports: [{ containerPort: 8000 }]
        env:
        - name: AZURE_STORAGE_ACCOUNT_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: AZURE_STORAGE_ACCOUNT_NAME
        - name: AZURE_STORAGE_CONTAINER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: AZURE_STORAGE_CONTAINER
        - name: AZURE_STORAGE_ACCOUNT_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: AZURE_STORAGE_ACCOUNT_KEY
        - name: POSTGRES_HOST
          value: postgres
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          valueFrom: { secretKeyRef: { name: pg-secret, key: POSTGRES_DB } }
        - name: POSTGRES_USER
          valueFrom: { secretKeyRef: { name: pg-secret, key: POSTGRES_USER } }
        - name: POSTGRES_PASSWORD
          valueFrom: { secretKeyRef: { name: pg-secret, key: POSTGRES_PASSWORD } }    
        - name: DATABASE_URL
          valueFrom: { secretKeyRef: { name: pg-url, key: url } }    
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: sit722
spec:
  type: LoadBalancer
  selector: { app: product-svc }
  ports:
    - port: 8000
      targetPort: 8000