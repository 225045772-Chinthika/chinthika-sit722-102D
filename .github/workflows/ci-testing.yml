name: CI - test, build, push (testing)

on:
  push:
    branches: [ "testing" ]

env:
  ACR: ${{ secrets.ACR_NAME }}.azurecr.io

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install deps & run tests (product)
        working-directory: backend/product-service
        run: |
          pip install -r requirements.txt
          pytest -q
      - name: Install deps & run tests (order)
        working-directory: backend/order-service
        run: |
          pip install -r requirements.txt
          pytest -q
      - name: Install deps & run tests (customer)
        working-directory: backend/customer-service
        run: |
          pip install -r requirements.txt
          pytest -q

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build & push product-service
        uses: docker/build-push-action@v6
        with:
          context: ./backend/product-service
          push: true
          tags: |
            ${{ env.ACR }}/product-service:${{ github.sha }}

      - name: Build & push order-service
        uses: docker/build-push-action@v6
        with:
          context: ./backend/order-service
          push: true
          tags: |
            ${{ env.ACR }}/order-service:${{ github.sha }}

      - name: Build & push customer-service
        uses: docker/build-push-action@v6
        with:
          context: ./backend/customer-service
          push: true
          tags: |
            ${{ env.ACR }}/customer-service:${{ github.sha }}

      - name: Build & push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.ACR }}/frontend:${{ github.sha }}