name: CI - test, build, push (testing)

on:
  push:
    branches: [ "testing" ]

env:
  ACR: ${{ secrets.ACR_NAME }}.azurecr.io

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        svc:
          - { name: product,  path: backend/product_service }
          - { name: order,    path: backend/order_service }
          - { name: customer, path: backend/customer_service }
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install deps & run tests (${{ matrix.svc.name }})
        working-directory: ${{ matrix.svc.path }}
        # only run if the folder exists (guards against name mismatches)
        if: ${{ hashFiles(format('{0}/requirements.txt', matrix.svc.path)) != '' }}
        run: |
          pip install -r requirements.txt
          if [ -f "pytest.ini" ] || ls tests 1> /dev/null 2>&1; then
            pytest -q
          else
            echo "No tests found for ${{ matrix.svc.name }}, skipping."
          fi

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        svc:
          - { name: product-service,  path: backend/product_service }
          - { name: order-service,    path: backend/order_service }
          - { name: customer-service, path: backend/customer_service }
          - { name: frontend,         path: frontend }
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Build & push if the path exists
      - name: Build & push ${{ matrix.svc.name }}
        if: ${{ hashFiles(format('{0}/**', matrix.svc.path)) != '' }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.svc.path }}
          push: true
          tags: |
            ${{ secrets.ACR_NAME }}.azurecr.io/${{ matrix.svc.name }}:${{ github.sha }}